{"version":3,"sources":["3-无重复字符的最长子串.js"],"names":["lengthOfLongestSubstring","s","max","first","index","str","i","len","length","slice","indexOf","console","time","log","timeEnd"],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;;;AAIA,IAAIA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAASC,CAAT,EAAY;AACzC,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO,iBAAP;AAE3B,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,KAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,CAAC,CAACO,MAAxB,EAAgCF,CAAC,GAAGC,GAApC,EAAyCD,CAAC,EAA1C,EAA+C;AAE7CF,IAAAA,KAAK,GAAGH,CAAC,CAACQ,KAAF,CAAQN,KAAR,EAAeG,CAAf,EAAkBI,OAAlB,CAA0BT,CAAC,CAACK,CAAD,CAA3B,CAAR;;AAEA,QAAIF,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdD,MAAAA,KAAK,GAAGG,CAAC,GAAGH,KAAJ,GAAY,CAApB;AAED,KAHD,MAGO;AACL,UAAID,GAAG,IAAII,CAAC,GAAGH,KAAJ,GAAY,CAAvB,EAA0B;AACxBE,QAAAA,GAAG,GAAGJ,CAAC,CAACQ,KAAF,CAAQN,KAAR,EAAeG,CAAC,GAAG,CAAnB,CAAN;AACAJ,QAAAA,GAAG,GAAGI,CAAC,GAAGH,KAAJ,GAAY,CAAlB;AACD;AACF;AACF;;AACD,SAAO;AACLD,IAAAA,GAAG,EAAHA,GADK;AAELG,IAAAA,GAAG,EAAHA;AAFK,GAAP;AAID,CAzBD;;AA2BAM,OAAO,CAACC,IAAR;AACAD,OAAO,CAACE,GAAR,CAAYb,wBAAwB,CAAC,WAAD,CAApC;AACAW,OAAO,CAACG,OAAR;AAGAH,OAAO,CAACC,IAAR;AACAD,OAAO,CAACE,GAAR,CAAYb,wBAAwB,CAAC,YAAD,CAApC;AACAW,OAAO,CAACG,OAAR","file":"3-无重复字符的最长子串.4788452d.js","sourceRoot":"..","sourcesContent":["// 给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。\n\n// 示例 1:\n\n// 输入: \"abcabcbb\"\n// 输出: 3 \n// 解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。\n// 示例 2:\n\n// 输入: \"bbbbb\"\n// 输出: 1\n// 解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。\n// 示例 3:\n\n// 输入: \"pwwkew\"\n// 输出: 3\n// 解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n//      请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n\n// 来源：力扣（LeetCode）\n// 链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters\n// 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n/**\n * @param {string} s\n * @return {number}\n */\nvar lengthOfLongestSubstring = function(s) {\n  if (typeof s !== 'string') return 'error parameter';\n\n  let max = 0;\n  let first = 0;\n  let index = false;\n  let str = '';\n  for (let i = 0, len = s.length; i < len; i++ ) {\n\n    index = s.slice(first, i).indexOf(s[i]);\n    \n    if (index > -1) {\n      first = i + first + 1;\n     \n    } else {\n      if (max <= i - first + 1) {\n        str = s.slice(first, i + 1);\n        max = i - first + 1\n      }\n    }\n  }\n  return {\n    max,\n    str\n  };\n};\n\nconsole.time();\nconsole.log(lengthOfLongestSubstring('abcdabcbb'));\nconsole.timeEnd();\n\n\nconsole.time();\nconsole.log(lengthOfLongestSubstring('abacdabcbb'));\nconsole.timeEnd();"]}